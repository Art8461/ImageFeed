//
//  SplashViewController.swift
//  ImageFeed
//
//  Created by Artem Kuzmenko on 01.09.2025.
//


import UIKit

final class SplashViewController: UIViewController {
    
    private let profileService = ProfileService.shared
    private let storage = OAuth2TokenStorage.shared
    private var hasSwitchedToTabBar = false // –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞

    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        print("üîπ SplashViewController –ø–æ—è–≤–∏–ª—Å—è. –¢–æ–∫–µ–Ω =", storage.token ?? "nil")

        if let token = storage.token, !token.isEmpty {
            fetchProfile(token: token)
        } else {
            showAuthController()
        }
    }

    private func switchToTabBarController() {
        guard !hasSwitchedToTabBar else { return } // –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥–≤–æ–π–Ω–æ–π –≤—ã–∑–æ–≤
        hasSwitchedToTabBar = true

        guard let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene,
              let window = windowScene.windows.first else {
            assertionFailure("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ")
            return
        }

        let tabBarController = TabBarController()
        window.rootViewController = tabBarController
        window.makeKeyAndVisible()
        print("‚úÖ TabBarController —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ rootViewController")
    }
    
    private func fetchProfile(token: String) {
        UIBlockingProgressHUD.show()
        
        profileService.fetchProfile(token) { [weak self] result in
                DispatchQueue.main.async {
                    UIBlockingProgressHUD.dismiss()
                    
                    switch result {
                    case .success(let profile):
                        ProfileImageService.shared.fetchProfileImageURL(username: profile.username) { _ in
                        }
                        // –ø—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ ProfileService.shared.profile –≤–Ω—É—Ç—Ä–∏ fetchProfile
                        self?.switchToTabBarController() // —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
                    case .failure(let error):
                        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: \(error)")
                    }
                }
            }
        }
    
    private func showAuthController() {
        // –°–æ–∑–¥–∞—ë–º AuthViewController —á–µ—Ä–µ–∑ –∫–æ–¥
        let authVC = AuthViewController()
        authVC.delegate = self

        // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ UINavigationController, —á—Ç–æ–±—ã –±—ã–ª NavigationBar
        let navVC = UINavigationController(rootViewController: authVC)
        navVC.modalPresentationStyle = .fullScreen

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ
        present(navVC, animated: true)
        print("‚ÑπÔ∏è –û—Ç–∫—Ä—ã—Ç AuthViewController —á–µ—Ä–µ–∑ –∫–æ–¥")
    }
}

// MARK: - AuthViewControllerDelegate
extension SplashViewController: AuthViewControllerDelegate {
    func didAuthenticate(_ vc: AuthViewController) {
        print("üîî –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–∑ AuthViewController")
        vc.dismiss(animated: true) { [weak self] in
            guard let token = self?.storage.token else { return }
            self?.fetchProfile(token: token)
        }
    }
}
